<?xml version="1.0" encoding="UTF-8"?>
<templates>
<template name="for" description="for loop" context="C Function" enabled="true">for (${var} = 0; ${var} &lt; ${max}; ++${var}) {
	${cursor}
}</template>
<template name="for" description="for loop with temporary variable" context="C Function" enabled="true">for (int ${var} = 0; ${var} &lt; ${max}; ++${var}) {
	${cursor}
}</template>
<template name="do" description="do while statement" context="C Function" enabled="true">do {
	${cursor}
} while (${condition});</template>
<template name="switch" description="switch case statement" context="C Function" enabled="true">switch (${key}) {
	case ${value}:
		${cursor}
		break;
	default:
		break;
}</template>
<template name="if" description="if statement" context="C Function" enabled="true">if (${condition}) {
	${cursor}
}</template>
<template name="ifelse" description="if else statement" context="C Function" enabled="true">if (${condition}) {
	${cursor}
} else {
	
}</template>
<template name="elseif" description="else if block" context="C Function" enabled="true">else if (${condition}) {
	${cursor}
}</template>
<template name="else" description="else block" context="C Function" enabled="true">else {
	${cursor}
}</template>
<template name="try" description="try catch block" context="C++ Function" enabled="true">try {
	${cursor}
} catch (${Exception} e) {
}</template>
<template name="catch" description="catch block" context="C++ Function" enabled="true">catch (${Exception} e) {
	${cursor}
}</template>
<template name="main" description="main method" context="C Global" enabled="true">int 
main(int argc, char **argv) {
	${cursor}
}</template>
<template name="class" description="class declaration" context="C++ Global" enabled="true">class ${name} {
	${cursor}
private:
};</template>
<template name="using" description="using a namespace" context="C++ Global" enabled="true">using namespace ${namespace};</template>
<template name="namespace" description="namespace declaration" context="C++ Global" enabled="true">namespace ${namespace} {
	${cursor}
}</template>
<template name="new" description="create new object" context="C++ Function" enabled="true">${type} ${name} = new ${type}(${arguments});</template>
<template name="comment" description="default multiline comment" context="C Global" enabled="true">/*
 * author ${user}
 *
 * To change this generated comment edit the template variable "comment":
 * Window&gt;Preferences&gt;C&gt;Templates.
 */</template>
<template name="stdout" description="print to standard output" context="C Function" enabled="true">printf(${cursor});</template>
<template name="stderr" description="print to standard error" context="C Function" enabled="true">fprintf(stderr, ${cursor});</template>
<template name="author" description="author name" context="C Global" enabled="true">author ${user}</template>
</templates>
